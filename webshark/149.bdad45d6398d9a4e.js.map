{"version":3,"file":"149.bdad45d6398d9a4e.js","mappings":"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","sources":["./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack/bootstrap","./src/app/wiregasm.worker.ts"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/// <reference lib=\"webworker\" />\n\n// addEventListener('message', ({ data }) => {\n//   const response = `worker response to ${data}`;\n//   postMessage(response);\n// });\n\n\n\n\n// load the Wiregasm library and pako\n//\n// pako is only used to inflate the compressed wasm and data files\n// if you are not compressing the wasm and data files, you do not need to include pako\n//\n// import * from '../wiregasm-lib'\n// import wiregasm from \"../wiregasm-lib/wiregasm.js\";\n// import pako from \"../wiregasm-lib/pako.js\";\n\nimportScripts(\n  \"../wiregasm-lib/wiregasm.js\",\n  \"../wiregasm-lib/pako.js\"\n);\n\n\ndeclare const loadWiregasm: any;\ndeclare const pako: any;\n\nlet lib: any = null;\nlet uploadDir: any = null;\nlet currentSession: any = null;\n\nconst inflateRemoteBuffer = async (url: string) => {\n  const res = await fetch(url);\n  const buf = await res.arrayBuffer();\n  return pako.inflate(buf);\n};\n\nconst fetchPackages = async () => {\n  console.log(\"Fetching packages\");\n  let [wasm, data] = await Promise.all([\n    await inflateRemoteBuffer(\n      \"../wiregasm-lib/wiregasm.wasm.gz\"\n    ),\n    await inflateRemoteBuffer(\n      \"../wiregasm-lib/wiregasm.data.gz\"\n    ),\n  ]);\n\n  return { wasm, data };\n};\n\nfetchPackages()\n  .then(({ wasm, data }) => {\n    loadWiregasm({\n      wasmBinary: wasm.buffer,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      getPreloadedPackage(name: string, size: any) {\n        return data.buffer;\n      },\n      handleStatus: (type: any, status: any) =>\n        postMessage({ type: \"status\", code: type, status: status }),\n      handleError: (error: any) => postMessage({ type: \"error\", error: error }),\n    })\n      .then((l: any) => {\n        lib = l;\n\n        if (!lib.init()) {\n          throw new Error(\"Failed to initialize Wiregasm\");\n        }\n\n        uploadDir = lib.getUploadDirectory();\n\n        postMessage({ type: \"init\" });\n      })\n      .catch((e: any) => {\n        postMessage({ type: \"error\", error: e });\n      });\n  })\n  .catch((e) => {\n    postMessage({ type: \"error\", error: e });\n  });\n\n\nfunction treeToObject(vec:any) {\n  let outData:any = [];\n\n  if(!!vec?.$$) {\n    for (let row = 0; row < vec.size(); row++) {\n      const el = vec.get(row);\n      if(typeof el === 'object') {\n        Object.keys(el).forEach((key) => {\n          if(!!el[key]?.$$) {\n            el[key] = treeToObject(el[key]);\n          }\n        })\n      }\n      outData[row] = el;\n    }\n\n  } else {\n    if(typeof vec === 'object') {\n      outData = vec;\n      Object.keys(vec).forEach((key) => {\n        if(!!vec[key]?.$$) {\n          outData[key] = treeToObject(vec[key]);\n        }\n      })\n    }\n  }\n  return outData;\n}\n// Event listener to receive messages from the main script\nonmessage = function (event) {\n  if (!lib) {\n    return;\n  }\n  const data = event.data;\n\n  console.log('worker', { lib, data });\n\n  if (data.type === \"process\") {\n    const f = data.file;\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (event: any) => {\n      console.log(\"Processing\", f.name);\n\n      // write the file to the emscripten filesystem\n      const buffer = new Uint8Array(event.target.result);\n      const path = `${uploadDir}/${f.name}`;\n      lib.FS.writeFile(path, buffer);\n\n      // delete the current session if it exists\n      if (currentSession !== null) {\n        currentSession.delete();\n        currentSession = null;\n      }\n\n      // create a new session\n      currentSession = new lib.DissectSession(path);\n      const res = currentSession.load();\n\n      const framesData = currentSession.getFrames('', 0, 0);\n      const cols = lib.getColumns();\n      const colsArray = Array.from({ length: cols.size() }, (x, k) => cols.get(k))\n      console.log({ cols })\n      const frames = framesData.frames;\n      console.log(frames)\n      const frame1 = currentSession.getFrame(1);\n      console.log(frame1)\n      console.log('data_sources as object', treeToObject(frame1))\n      // console.log('tree as object', treeToObject(frame1.tree))\n\n      const table = [];\n\n      for (let row = 0; row < frames.size(); row++) {\n        const element = frames.get(row);\n        table[row] = element;\n        table[row].colData = [];\n        for (let col = 0; col < element.columns.size(); col++) {\n          table[row].colData.push(element.columns.get(col));\n        }\n        delete table[row].columns;\n      }\n\n      console.log({ table });\n\n      postMessage({\n        type: \"processed\", name: f.name, data: {\n          res,\n          frame1,\n          colsArray,\n          table\n        }\n      });\n    });\n    reader.readAsArrayBuffer(f);\n  }\n  if (data.type === \"getFrame\") {\n    const frame1 = currentSession.getFrame(data.frameId);\n    console.log(frame1)\n    console.log('data_sources as object', treeToObject(frame1))\n    postMessage({\n      type: \"getFrame\", data: {\n\n        frame1,\n\n      }\n    });\n  }\n};\n"],"names":["_asyncToGenerator","require","default","importScripts","lib","uploadDir","currentSession","inflateRemoteBuffer","_ref","url","res","fetch","buf","arrayBuffer","pako","inflate","_x","apply","arguments","fetchPackages","_ref2","console","log","wasm","data","Promise","all","then","loadWiregasm","wasmBinary","buffer","getPreloadedPackage","name","size","handleStatus","type","status","postMessage","code","handleError","error","l","init","Error","getUploadDirectory","catch","e","treeToObject","vec","outData","$$","row","el","get","Object","keys","forEach","key","onmessage","event","f","file","reader","FileReader","addEventListener","Uint8Array","target","result","path","FS","writeFile","delete","DissectSession","load","framesData","getFrames","cols","getColumns","colsArray","Array","from","length","x","k","frames","frame1","getFrame","table","element","colData","col","columns","push","readAsArrayBuffer","frameId"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}